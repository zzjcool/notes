<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on zzj的笔记</title><link>/post/</link><description>Recent content in Posts on zzj的笔记</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 20 Mar 2022 03:30:25 +0800</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml"/><item><title>自引用函数和配置设计</title><link>/p/%E8%87%AA%E5%BC%95%E7%94%A8%E5%87%BD%E6%95%B0%E5%92%8C%E9%85%8D%E7%BD%AE%E8%AE%BE%E8%AE%A1/</link><pubDate>Sun, 20 Mar 2022 03:30:25 +0800</pubDate><guid>/p/%E8%87%AA%E5%BC%95%E7%94%A8%E5%87%BD%E6%95%B0%E5%92%8C%E9%85%8D%E7%BD%AE%E8%AE%BE%E8%AE%A1/</guid><description>最近发现一篇文章Self-referential functions and the design of options介绍了一种很好的实现配置的方式，目前这种方式 在许多的开源库中被使用，</description></item><item><title>Go 泛型使用与性能对比</title><link>/p/go-%E6%B3%9B%E5%9E%8B%E4%BD%BF%E7%94%A8%E4%B8%8E%E6%80%A7%E8%83%BD%E5%AF%B9%E6%AF%94/</link><pubDate>Thu, 17 Mar 2022 11:42:12 +0800</pubDate><guid>/p/go-%E6%B3%9B%E5%9E%8B%E4%BD%BF%E7%94%A8%E4%B8%8E%E6%80%A7%E8%83%BD%E5%AF%B9%E6%AF%94/</guid><description>2022年3月15号，Go 1.18版本正式发布，泛型也在这个版本中被支持。 下面简单的学习了下Go的泛型使用： 基本使用 首先从最常用的max函数</description></item><item><title>Go Struct 默认值的实现</title><link>/p/go-struct-%E9%BB%98%E8%AE%A4%E5%80%BC%E7%9A%84%E5%AE%9E%E7%8E%B0/</link><pubDate>Tue, 15 Mar 2022 23:41:23 +0800</pubDate><guid>/p/go-struct-%E9%BB%98%E8%AE%A4%E5%80%BC%E7%9A%84%E5%AE%9E%E7%8E%B0/</guid><description>当加载配置的时候，我们通常会将配置设置一个默认值，但是通常默认值不是Go中的空值，比如 服务的端口号： type ServerConfig struct{ Port uint } func main(){ conf:=loadConfig() if conf.ServerConfig.Port==0{ conf.ServerConfig.Port = 8080 } } 每次有一</description></item><item><title>Go协程对齐，等待条件执行，Castwait库实现</title><link>/p/go%E5%8D%8F%E7%A8%8B%E5%AF%B9%E9%BD%90%E7%AD%89%E5%BE%85%E6%9D%A1%E4%BB%B6%E6%89%A7%E8%A1%8Ccastwait%E5%BA%93%E5%AE%9E%E7%8E%B0/</link><pubDate>Sun, 27 Feb 2022 16:19:01 +0800</pubDate><guid>/p/go%E5%8D%8F%E7%A8%8B%E5%AF%B9%E9%BD%90%E7%AD%89%E5%BE%85%E6%9D%A1%E4%BB%B6%E6%89%A7%E8%A1%8Ccastwait%E5%BA%93%E5%AE%9E%E7%8E%B0/</guid><description>Go的groutine使用起来十分的方便，可以帮助开发者快速的实现支持并行的程序，但是并行的程序往往需要根据用户的不同需求进行调度，比较常用</description></item><item><title>业务性能优化，Reduce库实现</title><link>/p/%E4%B8%9A%E5%8A%A1%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96reduce%E5%BA%93%E5%AE%9E%E7%8E%B0/</link><pubDate>Sun, 20 Feb 2022 18:04:30 +0800</pubDate><guid>/p/%E4%B8%9A%E5%8A%A1%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96reduce%E5%BA%93%E5%AE%9E%E7%8E%B0/</guid><description>在业务中我们可能经常会遇到某个接口需要高频的调用，例如数据库更新、插入操作，调用某api，在这里每一次的调用都会有额外的成本，所以无论是数据</description></item><item><title>辣椒炒肉</title><link>/p/%E8%BE%A3%E6%A4%92%E7%82%92%E8%82%89/</link><pubDate>Tue, 15 Feb 2022 12:06:06 +0800</pubDate><guid>/p/%E8%BE%A3%E6%A4%92%E7%82%92%E8%82%89/</guid><description>材料准备 主料 辣椒 猪肉 辅料 小米椒 玉米淀粉 油 糖 盐 生抽 老抽 鸡精 大蒜 准备工作 将猪肉切成丝，加入少量老抽和生抽，玉米淀粉腌制，使用淀粉腌制过的猪肉会更</description></item><item><title>Nginx 相关配置</title><link>/p/nginx-%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/</link><pubDate>Fri, 07 Jan 2022 10:33:38 +0800</pubDate><guid>/p/nginx-%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/</guid><description>Docker启动Nginx 可以使用docker-compose快速的启动Nginx docker-compose.yaml文件： version:&amp;#39;3&amp;#39;services:nginx:image:nginxcontainer_name:nginxnetwork_mode:&amp;#34;host&amp;#34;volumes:- ./ngin</description></item><item><title>Golang 内置包常用方法</title><link>/p/golang-%E5%86%85%E7%BD%AE%E5%8C%85%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/</link><pubDate>Tue, 04 Jan 2022 19:43:41 +0800</pubDate><guid>/p/golang-%E5%86%85%E7%BD%AE%E5%8C%85%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/</guid><description>net/url 添加query 原本有url:http://domain.com, 现在想要添加query参数变成:http://domain.com?key</description></item></channel></rss>